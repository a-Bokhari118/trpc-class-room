
/* !!! This is code generated by Prisma. Do not edit directly. !!! */
/* eslint-disable */
// @ts-nocheck 
/**
 * This file exports the `Lesson` model and its related types.
 *
 * ðŸŸ¢ You can import this file directly.
 */
import * as runtime from "@prisma/client/runtime/library"
import type * as $Enums from "../enums"
import type * as Prisma from "../internal/prismaNamespace"

/**
 * Model Lesson
 * 
 */
export type LessonModel = runtime.Types.Result.DefaultSelection<Prisma.$LessonPayload>

export type AggregateLesson = {
  _count: LessonCountAggregateOutputType | null
  _avg: LessonAvgAggregateOutputType | null
  _sum: LessonSumAggregateOutputType | null
  _min: LessonMinAggregateOutputType | null
  _max: LessonMaxAggregateOutputType | null
}

export type LessonAvgAggregateOutputType = {
  position: number | null
}

export type LessonSumAggregateOutputType = {
  position: number | null
}

export type LessonMinAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  thumbnailKey: string | null
  videoKey: string | null
  position: number | null
  chapterId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type LessonMaxAggregateOutputType = {
  id: string | null
  title: string | null
  description: string | null
  thumbnailKey: string | null
  videoKey: string | null
  position: number | null
  chapterId: string | null
  createdAt: Date | null
  updatedAt: Date | null
}

export type LessonCountAggregateOutputType = {
  id: number
  title: number
  description: number
  thumbnailKey: number
  videoKey: number
  position: number
  chapterId: number
  createdAt: number
  updatedAt: number
  _all: number
}


export type LessonAvgAggregateInputType = {
  position?: true
}

export type LessonSumAggregateInputType = {
  position?: true
}

export type LessonMinAggregateInputType = {
  id?: true
  title?: true
  description?: true
  thumbnailKey?: true
  videoKey?: true
  position?: true
  chapterId?: true
  createdAt?: true
  updatedAt?: true
}

export type LessonMaxAggregateInputType = {
  id?: true
  title?: true
  description?: true
  thumbnailKey?: true
  videoKey?: true
  position?: true
  chapterId?: true
  createdAt?: true
  updatedAt?: true
}

export type LessonCountAggregateInputType = {
  id?: true
  title?: true
  description?: true
  thumbnailKey?: true
  videoKey?: true
  position?: true
  chapterId?: true
  createdAt?: true
  updatedAt?: true
  _all?: true
}

export type LessonAggregateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Lesson to aggregate.
   */
  where?: Prisma.LessonWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Lessons to fetch.
   */
  orderBy?: Prisma.LessonOrderByWithRelationInput | Prisma.LessonOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the start position
   */
  cursor?: Prisma.LessonWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Lessons from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Lessons.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Count returned Lessons
  **/
  _count?: true | LessonCountAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to average
  **/
  _avg?: LessonAvgAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to sum
  **/
  _sum?: LessonSumAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the minimum value
  **/
  _min?: LessonMinAggregateInputType
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
   * 
   * Select which fields to find the maximum value
  **/
  _max?: LessonMaxAggregateInputType
}

export type GetLessonAggregateType<T extends LessonAggregateArgs> = {
      [P in keyof T & keyof AggregateLesson]: P extends '_count' | 'count'
    ? T[P] extends true
      ? number
      : Prisma.GetScalarType<T[P], AggregateLesson[P]>
    : Prisma.GetScalarType<T[P], AggregateLesson[P]>
}




export type LessonGroupByArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.LessonWhereInput
  orderBy?: Prisma.LessonOrderByWithAggregationInput | Prisma.LessonOrderByWithAggregationInput[]
  by: Prisma.LessonScalarFieldEnum[] | Prisma.LessonScalarFieldEnum
  having?: Prisma.LessonScalarWhereWithAggregatesInput
  take?: number
  skip?: number
  _count?: LessonCountAggregateInputType | true
  _avg?: LessonAvgAggregateInputType
  _sum?: LessonSumAggregateInputType
  _min?: LessonMinAggregateInputType
  _max?: LessonMaxAggregateInputType
}

export type LessonGroupByOutputType = {
  id: string
  title: string
  description: string | null
  thumbnailKey: string | null
  videoKey: string | null
  position: number
  chapterId: string
  createdAt: Date
  updatedAt: Date
  _count: LessonCountAggregateOutputType | null
  _avg: LessonAvgAggregateOutputType | null
  _sum: LessonSumAggregateOutputType | null
  _min: LessonMinAggregateOutputType | null
  _max: LessonMaxAggregateOutputType | null
}

type GetLessonGroupByPayload<T extends LessonGroupByArgs> = Prisma.PrismaPromise<
  Array<
    Prisma.PickEnumerable<LessonGroupByOutputType, T['by']> &
      {
        [P in ((keyof T) & (keyof LessonGroupByOutputType))]: P extends '_count'
          ? T[P] extends boolean
            ? number
            : Prisma.GetScalarType<T[P], LessonGroupByOutputType[P]>
          : Prisma.GetScalarType<T[P], LessonGroupByOutputType[P]>
      }
    >
  > 



export type LessonWhereInput = {
  AND?: Prisma.LessonWhereInput | Prisma.LessonWhereInput[]
  OR?: Prisma.LessonWhereInput[]
  NOT?: Prisma.LessonWhereInput | Prisma.LessonWhereInput[]
  id?: Prisma.StringFilter<"Lesson"> | string
  title?: Prisma.StringFilter<"Lesson"> | string
  description?: Prisma.StringNullableFilter<"Lesson"> | string | null
  thumbnailKey?: Prisma.StringNullableFilter<"Lesson"> | string | null
  videoKey?: Prisma.StringNullableFilter<"Lesson"> | string | null
  position?: Prisma.IntFilter<"Lesson"> | number
  chapterId?: Prisma.StringFilter<"Lesson"> | string
  createdAt?: Prisma.DateTimeFilter<"Lesson"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Lesson"> | Date | string
  chapter?: Prisma.XOR<Prisma.ChapterScalarRelationFilter, Prisma.ChapterWhereInput>
  lessonProgress?: Prisma.LessonProgressListRelationFilter
}

export type LessonOrderByWithRelationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  thumbnailKey?: Prisma.SortOrderInput | Prisma.SortOrder
  videoKey?: Prisma.SortOrderInput | Prisma.SortOrder
  position?: Prisma.SortOrder
  chapterId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  chapter?: Prisma.ChapterOrderByWithRelationInput
  lessonProgress?: Prisma.LessonProgressOrderByRelationAggregateInput
}

export type LessonWhereUniqueInput = Prisma.AtLeast<{
  id?: string
  AND?: Prisma.LessonWhereInput | Prisma.LessonWhereInput[]
  OR?: Prisma.LessonWhereInput[]
  NOT?: Prisma.LessonWhereInput | Prisma.LessonWhereInput[]
  title?: Prisma.StringFilter<"Lesson"> | string
  description?: Prisma.StringNullableFilter<"Lesson"> | string | null
  thumbnailKey?: Prisma.StringNullableFilter<"Lesson"> | string | null
  videoKey?: Prisma.StringNullableFilter<"Lesson"> | string | null
  position?: Prisma.IntFilter<"Lesson"> | number
  chapterId?: Prisma.StringFilter<"Lesson"> | string
  createdAt?: Prisma.DateTimeFilter<"Lesson"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Lesson"> | Date | string
  chapter?: Prisma.XOR<Prisma.ChapterScalarRelationFilter, Prisma.ChapterWhereInput>
  lessonProgress?: Prisma.LessonProgressListRelationFilter
}, "id">

export type LessonOrderByWithAggregationInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrderInput | Prisma.SortOrder
  thumbnailKey?: Prisma.SortOrderInput | Prisma.SortOrder
  videoKey?: Prisma.SortOrderInput | Prisma.SortOrder
  position?: Prisma.SortOrder
  chapterId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
  _count?: Prisma.LessonCountOrderByAggregateInput
  _avg?: Prisma.LessonAvgOrderByAggregateInput
  _max?: Prisma.LessonMaxOrderByAggregateInput
  _min?: Prisma.LessonMinOrderByAggregateInput
  _sum?: Prisma.LessonSumOrderByAggregateInput
}

export type LessonScalarWhereWithAggregatesInput = {
  AND?: Prisma.LessonScalarWhereWithAggregatesInput | Prisma.LessonScalarWhereWithAggregatesInput[]
  OR?: Prisma.LessonScalarWhereWithAggregatesInput[]
  NOT?: Prisma.LessonScalarWhereWithAggregatesInput | Prisma.LessonScalarWhereWithAggregatesInput[]
  id?: Prisma.StringWithAggregatesFilter<"Lesson"> | string
  title?: Prisma.StringWithAggregatesFilter<"Lesson"> | string
  description?: Prisma.StringNullableWithAggregatesFilter<"Lesson"> | string | null
  thumbnailKey?: Prisma.StringNullableWithAggregatesFilter<"Lesson"> | string | null
  videoKey?: Prisma.StringNullableWithAggregatesFilter<"Lesson"> | string | null
  position?: Prisma.IntWithAggregatesFilter<"Lesson"> | number
  chapterId?: Prisma.StringWithAggregatesFilter<"Lesson"> | string
  createdAt?: Prisma.DateTimeWithAggregatesFilter<"Lesson"> | Date | string
  updatedAt?: Prisma.DateTimeWithAggregatesFilter<"Lesson"> | Date | string
}

export type LessonCreateInput = {
  id?: string
  title: string
  description?: string | null
  thumbnailKey?: string | null
  videoKey?: string | null
  position: number
  createdAt?: Date | string
  updatedAt?: Date | string
  chapter: Prisma.ChapterCreateNestedOneWithoutLessonsInput
  lessonProgress?: Prisma.LessonProgressCreateNestedManyWithoutLessonInput
}

export type LessonUncheckedCreateInput = {
  id?: string
  title: string
  description?: string | null
  thumbnailKey?: string | null
  videoKey?: string | null
  position: number
  chapterId: string
  createdAt?: Date | string
  updatedAt?: Date | string
  lessonProgress?: Prisma.LessonProgressUncheckedCreateNestedManyWithoutLessonInput
}

export type LessonUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  videoKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  position?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  chapter?: Prisma.ChapterUpdateOneRequiredWithoutLessonsNestedInput
  lessonProgress?: Prisma.LessonProgressUpdateManyWithoutLessonNestedInput
}

export type LessonUncheckedUpdateInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  videoKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  position?: Prisma.IntFieldUpdateOperationsInput | number
  chapterId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lessonProgress?: Prisma.LessonProgressUncheckedUpdateManyWithoutLessonNestedInput
}

export type LessonCreateManyInput = {
  id?: string
  title: string
  description?: string | null
  thumbnailKey?: string | null
  videoKey?: string | null
  position: number
  chapterId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type LessonUpdateManyMutationInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  videoKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  position?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type LessonUncheckedUpdateManyInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  videoKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  position?: Prisma.IntFieldUpdateOperationsInput | number
  chapterId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type LessonListRelationFilter = {
  every?: Prisma.LessonWhereInput
  some?: Prisma.LessonWhereInput
  none?: Prisma.LessonWhereInput
}

export type LessonOrderByRelationAggregateInput = {
  _count?: Prisma.SortOrder
}

export type LessonCountOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  thumbnailKey?: Prisma.SortOrder
  videoKey?: Prisma.SortOrder
  position?: Prisma.SortOrder
  chapterId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type LessonAvgOrderByAggregateInput = {
  position?: Prisma.SortOrder
}

export type LessonMaxOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  thumbnailKey?: Prisma.SortOrder
  videoKey?: Prisma.SortOrder
  position?: Prisma.SortOrder
  chapterId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type LessonMinOrderByAggregateInput = {
  id?: Prisma.SortOrder
  title?: Prisma.SortOrder
  description?: Prisma.SortOrder
  thumbnailKey?: Prisma.SortOrder
  videoKey?: Prisma.SortOrder
  position?: Prisma.SortOrder
  chapterId?: Prisma.SortOrder
  createdAt?: Prisma.SortOrder
  updatedAt?: Prisma.SortOrder
}

export type LessonSumOrderByAggregateInput = {
  position?: Prisma.SortOrder
}

export type LessonScalarRelationFilter = {
  is?: Prisma.LessonWhereInput
  isNot?: Prisma.LessonWhereInput
}

export type LessonCreateNestedManyWithoutChapterInput = {
  create?: Prisma.XOR<Prisma.LessonCreateWithoutChapterInput, Prisma.LessonUncheckedCreateWithoutChapterInput> | Prisma.LessonCreateWithoutChapterInput[] | Prisma.LessonUncheckedCreateWithoutChapterInput[]
  connectOrCreate?: Prisma.LessonCreateOrConnectWithoutChapterInput | Prisma.LessonCreateOrConnectWithoutChapterInput[]
  createMany?: Prisma.LessonCreateManyChapterInputEnvelope
  connect?: Prisma.LessonWhereUniqueInput | Prisma.LessonWhereUniqueInput[]
}

export type LessonUncheckedCreateNestedManyWithoutChapterInput = {
  create?: Prisma.XOR<Prisma.LessonCreateWithoutChapterInput, Prisma.LessonUncheckedCreateWithoutChapterInput> | Prisma.LessonCreateWithoutChapterInput[] | Prisma.LessonUncheckedCreateWithoutChapterInput[]
  connectOrCreate?: Prisma.LessonCreateOrConnectWithoutChapterInput | Prisma.LessonCreateOrConnectWithoutChapterInput[]
  createMany?: Prisma.LessonCreateManyChapterInputEnvelope
  connect?: Prisma.LessonWhereUniqueInput | Prisma.LessonWhereUniqueInput[]
}

export type LessonUpdateManyWithoutChapterNestedInput = {
  create?: Prisma.XOR<Prisma.LessonCreateWithoutChapterInput, Prisma.LessonUncheckedCreateWithoutChapterInput> | Prisma.LessonCreateWithoutChapterInput[] | Prisma.LessonUncheckedCreateWithoutChapterInput[]
  connectOrCreate?: Prisma.LessonCreateOrConnectWithoutChapterInput | Prisma.LessonCreateOrConnectWithoutChapterInput[]
  upsert?: Prisma.LessonUpsertWithWhereUniqueWithoutChapterInput | Prisma.LessonUpsertWithWhereUniqueWithoutChapterInput[]
  createMany?: Prisma.LessonCreateManyChapterInputEnvelope
  set?: Prisma.LessonWhereUniqueInput | Prisma.LessonWhereUniqueInput[]
  disconnect?: Prisma.LessonWhereUniqueInput | Prisma.LessonWhereUniqueInput[]
  delete?: Prisma.LessonWhereUniqueInput | Prisma.LessonWhereUniqueInput[]
  connect?: Prisma.LessonWhereUniqueInput | Prisma.LessonWhereUniqueInput[]
  update?: Prisma.LessonUpdateWithWhereUniqueWithoutChapterInput | Prisma.LessonUpdateWithWhereUniqueWithoutChapterInput[]
  updateMany?: Prisma.LessonUpdateManyWithWhereWithoutChapterInput | Prisma.LessonUpdateManyWithWhereWithoutChapterInput[]
  deleteMany?: Prisma.LessonScalarWhereInput | Prisma.LessonScalarWhereInput[]
}

export type LessonUncheckedUpdateManyWithoutChapterNestedInput = {
  create?: Prisma.XOR<Prisma.LessonCreateWithoutChapterInput, Prisma.LessonUncheckedCreateWithoutChapterInput> | Prisma.LessonCreateWithoutChapterInput[] | Prisma.LessonUncheckedCreateWithoutChapterInput[]
  connectOrCreate?: Prisma.LessonCreateOrConnectWithoutChapterInput | Prisma.LessonCreateOrConnectWithoutChapterInput[]
  upsert?: Prisma.LessonUpsertWithWhereUniqueWithoutChapterInput | Prisma.LessonUpsertWithWhereUniqueWithoutChapterInput[]
  createMany?: Prisma.LessonCreateManyChapterInputEnvelope
  set?: Prisma.LessonWhereUniqueInput | Prisma.LessonWhereUniqueInput[]
  disconnect?: Prisma.LessonWhereUniqueInput | Prisma.LessonWhereUniqueInput[]
  delete?: Prisma.LessonWhereUniqueInput | Prisma.LessonWhereUniqueInput[]
  connect?: Prisma.LessonWhereUniqueInput | Prisma.LessonWhereUniqueInput[]
  update?: Prisma.LessonUpdateWithWhereUniqueWithoutChapterInput | Prisma.LessonUpdateWithWhereUniqueWithoutChapterInput[]
  updateMany?: Prisma.LessonUpdateManyWithWhereWithoutChapterInput | Prisma.LessonUpdateManyWithWhereWithoutChapterInput[]
  deleteMany?: Prisma.LessonScalarWhereInput | Prisma.LessonScalarWhereInput[]
}

export type LessonCreateNestedOneWithoutLessonProgressInput = {
  create?: Prisma.XOR<Prisma.LessonCreateWithoutLessonProgressInput, Prisma.LessonUncheckedCreateWithoutLessonProgressInput>
  connectOrCreate?: Prisma.LessonCreateOrConnectWithoutLessonProgressInput
  connect?: Prisma.LessonWhereUniqueInput
}

export type LessonUpdateOneRequiredWithoutLessonProgressNestedInput = {
  create?: Prisma.XOR<Prisma.LessonCreateWithoutLessonProgressInput, Prisma.LessonUncheckedCreateWithoutLessonProgressInput>
  connectOrCreate?: Prisma.LessonCreateOrConnectWithoutLessonProgressInput
  upsert?: Prisma.LessonUpsertWithoutLessonProgressInput
  connect?: Prisma.LessonWhereUniqueInput
  update?: Prisma.XOR<Prisma.XOR<Prisma.LessonUpdateToOneWithWhereWithoutLessonProgressInput, Prisma.LessonUpdateWithoutLessonProgressInput>, Prisma.LessonUncheckedUpdateWithoutLessonProgressInput>
}

export type LessonCreateWithoutChapterInput = {
  id?: string
  title: string
  description?: string | null
  thumbnailKey?: string | null
  videoKey?: string | null
  position: number
  createdAt?: Date | string
  updatedAt?: Date | string
  lessonProgress?: Prisma.LessonProgressCreateNestedManyWithoutLessonInput
}

export type LessonUncheckedCreateWithoutChapterInput = {
  id?: string
  title: string
  description?: string | null
  thumbnailKey?: string | null
  videoKey?: string | null
  position: number
  createdAt?: Date | string
  updatedAt?: Date | string
  lessonProgress?: Prisma.LessonProgressUncheckedCreateNestedManyWithoutLessonInput
}

export type LessonCreateOrConnectWithoutChapterInput = {
  where: Prisma.LessonWhereUniqueInput
  create: Prisma.XOR<Prisma.LessonCreateWithoutChapterInput, Prisma.LessonUncheckedCreateWithoutChapterInput>
}

export type LessonCreateManyChapterInputEnvelope = {
  data: Prisma.LessonCreateManyChapterInput | Prisma.LessonCreateManyChapterInput[]
  skipDuplicates?: boolean
}

export type LessonUpsertWithWhereUniqueWithoutChapterInput = {
  where: Prisma.LessonWhereUniqueInput
  update: Prisma.XOR<Prisma.LessonUpdateWithoutChapterInput, Prisma.LessonUncheckedUpdateWithoutChapterInput>
  create: Prisma.XOR<Prisma.LessonCreateWithoutChapterInput, Prisma.LessonUncheckedCreateWithoutChapterInput>
}

export type LessonUpdateWithWhereUniqueWithoutChapterInput = {
  where: Prisma.LessonWhereUniqueInput
  data: Prisma.XOR<Prisma.LessonUpdateWithoutChapterInput, Prisma.LessonUncheckedUpdateWithoutChapterInput>
}

export type LessonUpdateManyWithWhereWithoutChapterInput = {
  where: Prisma.LessonScalarWhereInput
  data: Prisma.XOR<Prisma.LessonUpdateManyMutationInput, Prisma.LessonUncheckedUpdateManyWithoutChapterInput>
}

export type LessonScalarWhereInput = {
  AND?: Prisma.LessonScalarWhereInput | Prisma.LessonScalarWhereInput[]
  OR?: Prisma.LessonScalarWhereInput[]
  NOT?: Prisma.LessonScalarWhereInput | Prisma.LessonScalarWhereInput[]
  id?: Prisma.StringFilter<"Lesson"> | string
  title?: Prisma.StringFilter<"Lesson"> | string
  description?: Prisma.StringNullableFilter<"Lesson"> | string | null
  thumbnailKey?: Prisma.StringNullableFilter<"Lesson"> | string | null
  videoKey?: Prisma.StringNullableFilter<"Lesson"> | string | null
  position?: Prisma.IntFilter<"Lesson"> | number
  chapterId?: Prisma.StringFilter<"Lesson"> | string
  createdAt?: Prisma.DateTimeFilter<"Lesson"> | Date | string
  updatedAt?: Prisma.DateTimeFilter<"Lesson"> | Date | string
}

export type LessonCreateWithoutLessonProgressInput = {
  id?: string
  title: string
  description?: string | null
  thumbnailKey?: string | null
  videoKey?: string | null
  position: number
  createdAt?: Date | string
  updatedAt?: Date | string
  chapter: Prisma.ChapterCreateNestedOneWithoutLessonsInput
}

export type LessonUncheckedCreateWithoutLessonProgressInput = {
  id?: string
  title: string
  description?: string | null
  thumbnailKey?: string | null
  videoKey?: string | null
  position: number
  chapterId: string
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type LessonCreateOrConnectWithoutLessonProgressInput = {
  where: Prisma.LessonWhereUniqueInput
  create: Prisma.XOR<Prisma.LessonCreateWithoutLessonProgressInput, Prisma.LessonUncheckedCreateWithoutLessonProgressInput>
}

export type LessonUpsertWithoutLessonProgressInput = {
  update: Prisma.XOR<Prisma.LessonUpdateWithoutLessonProgressInput, Prisma.LessonUncheckedUpdateWithoutLessonProgressInput>
  create: Prisma.XOR<Prisma.LessonCreateWithoutLessonProgressInput, Prisma.LessonUncheckedCreateWithoutLessonProgressInput>
  where?: Prisma.LessonWhereInput
}

export type LessonUpdateToOneWithWhereWithoutLessonProgressInput = {
  where?: Prisma.LessonWhereInput
  data: Prisma.XOR<Prisma.LessonUpdateWithoutLessonProgressInput, Prisma.LessonUncheckedUpdateWithoutLessonProgressInput>
}

export type LessonUpdateWithoutLessonProgressInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  videoKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  position?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  chapter?: Prisma.ChapterUpdateOneRequiredWithoutLessonsNestedInput
}

export type LessonUncheckedUpdateWithoutLessonProgressInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  videoKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  position?: Prisma.IntFieldUpdateOperationsInput | number
  chapterId?: Prisma.StringFieldUpdateOperationsInput | string
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}

export type LessonCreateManyChapterInput = {
  id?: string
  title: string
  description?: string | null
  thumbnailKey?: string | null
  videoKey?: string | null
  position: number
  createdAt?: Date | string
  updatedAt?: Date | string
}

export type LessonUpdateWithoutChapterInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  videoKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  position?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lessonProgress?: Prisma.LessonProgressUpdateManyWithoutLessonNestedInput
}

export type LessonUncheckedUpdateWithoutChapterInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  videoKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  position?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  lessonProgress?: Prisma.LessonProgressUncheckedUpdateManyWithoutLessonNestedInput
}

export type LessonUncheckedUpdateManyWithoutChapterInput = {
  id?: Prisma.StringFieldUpdateOperationsInput | string
  title?: Prisma.StringFieldUpdateOperationsInput | string
  description?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  thumbnailKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  videoKey?: Prisma.NullableStringFieldUpdateOperationsInput | string | null
  position?: Prisma.IntFieldUpdateOperationsInput | number
  createdAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
  updatedAt?: Prisma.DateTimeFieldUpdateOperationsInput | Date | string
}


/**
 * Count Type LessonCountOutputType
 */

export type LessonCountOutputType = {
  lessonProgress: number
}

export type LessonCountOutputTypeSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  lessonProgress?: boolean | LessonCountOutputTypeCountLessonProgressArgs
}

/**
 * LessonCountOutputType without action
 */
export type LessonCountOutputTypeDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LessonCountOutputType
   */
  select?: Prisma.LessonCountOutputTypeSelect<ExtArgs> | null
}

/**
 * LessonCountOutputType without action
 */
export type LessonCountOutputTypeCountLessonProgressArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  where?: Prisma.LessonProgressWhereInput
}


export type LessonSelect<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  thumbnailKey?: boolean
  videoKey?: boolean
  position?: boolean
  chapterId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  chapter?: boolean | Prisma.ChapterDefaultArgs<ExtArgs>
  lessonProgress?: boolean | Prisma.Lesson$lessonProgressArgs<ExtArgs>
  _count?: boolean | Prisma.LessonCountOutputTypeDefaultArgs<ExtArgs>
}, ExtArgs["result"]["lesson"]>

export type LessonSelectCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  thumbnailKey?: boolean
  videoKey?: boolean
  position?: boolean
  chapterId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  chapter?: boolean | Prisma.ChapterDefaultArgs<ExtArgs>
}, ExtArgs["result"]["lesson"]>

export type LessonSelectUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetSelect<{
  id?: boolean
  title?: boolean
  description?: boolean
  thumbnailKey?: boolean
  videoKey?: boolean
  position?: boolean
  chapterId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
  chapter?: boolean | Prisma.ChapterDefaultArgs<ExtArgs>
}, ExtArgs["result"]["lesson"]>

export type LessonSelectScalar = {
  id?: boolean
  title?: boolean
  description?: boolean
  thumbnailKey?: boolean
  videoKey?: boolean
  position?: boolean
  chapterId?: boolean
  createdAt?: boolean
  updatedAt?: boolean
}

export type LessonOmit<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = runtime.Types.Extensions.GetOmit<"id" | "title" | "description" | "thumbnailKey" | "videoKey" | "position" | "chapterId" | "createdAt" | "updatedAt", ExtArgs["result"]["lesson"]>
export type LessonInclude<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  chapter?: boolean | Prisma.ChapterDefaultArgs<ExtArgs>
  lessonProgress?: boolean | Prisma.Lesson$lessonProgressArgs<ExtArgs>
  _count?: boolean | Prisma.LessonCountOutputTypeDefaultArgs<ExtArgs>
}
export type LessonIncludeCreateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  chapter?: boolean | Prisma.ChapterDefaultArgs<ExtArgs>
}
export type LessonIncludeUpdateManyAndReturn<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  chapter?: boolean | Prisma.ChapterDefaultArgs<ExtArgs>
}

export type $LessonPayload<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  name: "Lesson"
  objects: {
    chapter: Prisma.$ChapterPayload<ExtArgs>
    lessonProgress: Prisma.$LessonProgressPayload<ExtArgs>[]
  }
  scalars: runtime.Types.Extensions.GetPayloadResult<{
    id: string
    title: string
    description: string | null
    thumbnailKey: string | null
    videoKey: string | null
    position: number
    chapterId: string
    createdAt: Date
    updatedAt: Date
  }, ExtArgs["result"]["lesson"]>
  composites: {}
}

export type LessonGetPayload<S extends boolean | null | undefined | LessonDefaultArgs> = runtime.Types.Result.GetResult<Prisma.$LessonPayload, S>

export type LessonCountArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> =
  Omit<LessonFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
    select?: LessonCountAggregateInputType | true
  }

export interface LessonDelegate<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Lesson'], meta: { name: 'Lesson' } }
  /**
   * Find zero or one Lesson that matches the filter.
   * @param {LessonFindUniqueArgs} args - Arguments to find a Lesson
   * @example
   * // Get one Lesson
   * const lesson = await prisma.lesson.findUnique({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUnique<T extends LessonFindUniqueArgs>(args: Prisma.SelectSubset<T, LessonFindUniqueArgs<ExtArgs>>): Prisma.Prisma__LessonClient<runtime.Types.Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find one Lesson that matches the filter or throw an error with `error.code='P2025'`
   * if no matches were found.
   * @param {LessonFindUniqueOrThrowArgs} args - Arguments to find a Lesson
   * @example
   * // Get one Lesson
   * const lesson = await prisma.lesson.findUniqueOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findUniqueOrThrow<T extends LessonFindUniqueOrThrowArgs>(args: Prisma.SelectSubset<T, LessonFindUniqueOrThrowArgs<ExtArgs>>): Prisma.Prisma__LessonClient<runtime.Types.Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Lesson that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LessonFindFirstArgs} args - Arguments to find a Lesson
   * @example
   * // Get one Lesson
   * const lesson = await prisma.lesson.findFirst({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirst<T extends LessonFindFirstArgs>(args?: Prisma.SelectSubset<T, LessonFindFirstArgs<ExtArgs>>): Prisma.Prisma__LessonClient<runtime.Types.Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

  /**
   * Find the first Lesson that matches the filter or
   * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LessonFindFirstOrThrowArgs} args - Arguments to find a Lesson
   * @example
   * // Get one Lesson
   * const lesson = await prisma.lesson.findFirstOrThrow({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   */
  findFirstOrThrow<T extends LessonFindFirstOrThrowArgs>(args?: Prisma.SelectSubset<T, LessonFindFirstOrThrowArgs<ExtArgs>>): Prisma.Prisma__LessonClient<runtime.Types.Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Find zero or more Lessons that matches the filter.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LessonFindManyArgs} args - Arguments to filter and select certain fields only.
   * @example
   * // Get all Lessons
   * const lessons = await prisma.lesson.findMany()
   * 
   * // Get first 10 Lessons
   * const lessons = await prisma.lesson.findMany({ take: 10 })
   * 
   * // Only select the `id`
   * const lessonWithIdOnly = await prisma.lesson.findMany({ select: { id: true } })
   * 
   */
  findMany<T extends LessonFindManyArgs>(args?: Prisma.SelectSubset<T, LessonFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

  /**
   * Create a Lesson.
   * @param {LessonCreateArgs} args - Arguments to create a Lesson.
   * @example
   * // Create one Lesson
   * const Lesson = await prisma.lesson.create({
   *   data: {
   *     // ... data to create a Lesson
   *   }
   * })
   * 
   */
  create<T extends LessonCreateArgs>(args: Prisma.SelectSubset<T, LessonCreateArgs<ExtArgs>>): Prisma.Prisma__LessonClient<runtime.Types.Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Create many Lessons.
   * @param {LessonCreateManyArgs} args - Arguments to create many Lessons.
   * @example
   * // Create many Lessons
   * const lesson = await prisma.lesson.createMany({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   *     
   */
  createMany<T extends LessonCreateManyArgs>(args?: Prisma.SelectSubset<T, LessonCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Create many Lessons and returns the data saved in the database.
   * @param {LessonCreateManyAndReturnArgs} args - Arguments to create many Lessons.
   * @example
   * // Create many Lessons
   * const lesson = await prisma.lesson.createManyAndReturn({
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Create many Lessons and only return the `id`
   * const lessonWithIdOnly = await prisma.lesson.createManyAndReturn({
   *   select: { id: true },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  createManyAndReturn<T extends LessonCreateManyAndReturnArgs>(args?: Prisma.SelectSubset<T, LessonCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

  /**
   * Delete a Lesson.
   * @param {LessonDeleteArgs} args - Arguments to delete one Lesson.
   * @example
   * // Delete one Lesson
   * const Lesson = await prisma.lesson.delete({
   *   where: {
   *     // ... filter to delete one Lesson
   *   }
   * })
   * 
   */
  delete<T extends LessonDeleteArgs>(args: Prisma.SelectSubset<T, LessonDeleteArgs<ExtArgs>>): Prisma.Prisma__LessonClient<runtime.Types.Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Update one Lesson.
   * @param {LessonUpdateArgs} args - Arguments to update one Lesson.
   * @example
   * // Update one Lesson
   * const lesson = await prisma.lesson.update({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  update<T extends LessonUpdateArgs>(args: Prisma.SelectSubset<T, LessonUpdateArgs<ExtArgs>>): Prisma.Prisma__LessonClient<runtime.Types.Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

  /**
   * Delete zero or more Lessons.
   * @param {LessonDeleteManyArgs} args - Arguments to filter Lessons to delete.
   * @example
   * // Delete a few Lessons
   * const { count } = await prisma.lesson.deleteMany({
   *   where: {
   *     // ... provide filter here
   *   }
   * })
   * 
   */
  deleteMany<T extends LessonDeleteManyArgs>(args?: Prisma.SelectSubset<T, LessonDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Lessons.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LessonUpdateManyArgs} args - Arguments to update one or more rows.
   * @example
   * // Update many Lessons
   * const lesson = await prisma.lesson.updateMany({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: {
   *     // ... provide data here
   *   }
   * })
   * 
   */
  updateMany<T extends LessonUpdateManyArgs>(args: Prisma.SelectSubset<T, LessonUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<Prisma.BatchPayload>

  /**
   * Update zero or more Lessons and returns the data updated in the database.
   * @param {LessonUpdateManyAndReturnArgs} args - Arguments to update many Lessons.
   * @example
   * // Update many Lessons
   * const lesson = await prisma.lesson.updateManyAndReturn({
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * 
   * // Update zero or more Lessons and only return the `id`
   * const lessonWithIdOnly = await prisma.lesson.updateManyAndReturn({
   *   select: { id: true },
   *   where: {
   *     // ... provide filter here
   *   },
   *   data: [
   *     // ... provide data here
   *   ]
   * })
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * 
   */
  updateManyAndReturn<T extends LessonUpdateManyAndReturnArgs>(args: Prisma.SelectSubset<T, LessonUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

  /**
   * Create or update one Lesson.
   * @param {LessonUpsertArgs} args - Arguments to update or create a Lesson.
   * @example
   * // Update or create a Lesson
   * const lesson = await prisma.lesson.upsert({
   *   create: {
   *     // ... data to create a Lesson
   *   },
   *   update: {
   *     // ... in case it already exists, update
   *   },
   *   where: {
   *     // ... the filter for the Lesson we want to update
   *   }
   * })
   */
  upsert<T extends LessonUpsertArgs>(args: Prisma.SelectSubset<T, LessonUpsertArgs<ExtArgs>>): Prisma.Prisma__LessonClient<runtime.Types.Result.GetResult<Prisma.$LessonPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


  /**
   * Count the number of Lessons.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LessonCountArgs} args - Arguments to filter Lessons to count.
   * @example
   * // Count the number of Lessons
   * const count = await prisma.lesson.count({
   *   where: {
   *     // ... the filter for the Lessons we want to count
   *   }
   * })
  **/
  count<T extends LessonCountArgs>(
    args?: Prisma.Subset<T, LessonCountArgs>,
  ): Prisma.PrismaPromise<
    T extends runtime.Types.Utils.Record<'select', any>
      ? T['select'] extends true
        ? number
        : Prisma.GetScalarType<T['select'], LessonCountAggregateOutputType>
      : number
  >

  /**
   * Allows you to perform aggregations operations on a Lesson.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LessonAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
   * @example
   * // Ordered by age ascending
   * // Where email contains prisma.io
   * // Limited to the 10 users
   * const aggregations = await prisma.user.aggregate({
   *   _avg: {
   *     age: true,
   *   },
   *   where: {
   *     email: {
   *       contains: "prisma.io",
   *     },
   *   },
   *   orderBy: {
   *     age: "asc",
   *   },
   *   take: 10,
   * })
  **/
  aggregate<T extends LessonAggregateArgs>(args: Prisma.Subset<T, LessonAggregateArgs>): Prisma.PrismaPromise<GetLessonAggregateType<T>>

  /**
   * Group by Lesson.
   * Note, that providing `undefined` is treated as the value not being there.
   * Read more here: https://pris.ly/d/null-undefined
   * @param {LessonGroupByArgs} args - Group by arguments.
   * @example
   * // Group by city, order by createdAt, get count
   * const result = await prisma.user.groupBy({
   *   by: ['city', 'createdAt'],
   *   orderBy: {
   *     createdAt: true
   *   },
   *   _count: {
   *     _all: true
   *   },
   * })
   * 
  **/
  groupBy<
    T extends LessonGroupByArgs,
    HasSelectOrTake extends Prisma.Or<
      Prisma.Extends<'skip', Prisma.Keys<T>>,
      Prisma.Extends<'take', Prisma.Keys<T>>
    >,
    OrderByArg extends Prisma.True extends HasSelectOrTake
      ? { orderBy: LessonGroupByArgs['orderBy'] }
      : { orderBy?: LessonGroupByArgs['orderBy'] },
    OrderFields extends Prisma.ExcludeUnderscoreKeys<Prisma.Keys<Prisma.MaybeTupleToUnion<T['orderBy']>>>,
    ByFields extends Prisma.MaybeTupleToUnion<T['by']>,
    ByValid extends Prisma.Has<ByFields, OrderFields>,
    HavingFields extends Prisma.GetHavingFields<T['having']>,
    HavingValid extends Prisma.Has<ByFields, HavingFields>,
    ByEmpty extends T['by'] extends never[] ? Prisma.True : Prisma.False,
    InputErrors extends ByEmpty extends Prisma.True
    ? `Error: "by" must not be empty.`
    : HavingValid extends Prisma.False
    ? {
        [P in HavingFields]: P extends ByFields
          ? never
          : P extends string
          ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
          : [
              Error,
              'Field ',
              P,
              ` in "having" needs to be provided in "by"`,
            ]
      }[HavingFields]
    : 'take' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "take", you also need to provide "orderBy"'
    : 'skip' extends Prisma.Keys<T>
    ? 'orderBy' extends Prisma.Keys<T>
      ? ByValid extends Prisma.True
        ? {}
        : {
            [P in OrderFields]: P extends ByFields
              ? never
              : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
          }[OrderFields]
      : 'Error: If you provide "skip", you also need to provide "orderBy"'
    : ByValid extends Prisma.True
    ? {}
    : {
        [P in OrderFields]: P extends ByFields
          ? never
          : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
      }[OrderFields]
  >(args: Prisma.SubsetIntersection<T, LessonGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLessonGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
/**
 * Fields of the Lesson model
 */
readonly fields: LessonFieldRefs;
}

/**
 * The delegate class that acts as a "Promise-like" for Lesson.
 * Why is this prefixed with `Prisma__`?
 * Because we want to prevent naming conflicts as mentioned in
 * https://github.com/prisma/prisma-client-js/issues/707
 */
export interface Prisma__LessonClient<T, Null = never, ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
  readonly [Symbol.toStringTag]: "PrismaPromise"
  chapter<T extends Prisma.ChapterDefaultArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.ChapterDefaultArgs<ExtArgs>>): Prisma.Prisma__ChapterClient<runtime.Types.Result.GetResult<Prisma.$ChapterPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
  lessonProgress<T extends Prisma.Lesson$lessonProgressArgs<ExtArgs> = {}>(args?: Prisma.Subset<T, Prisma.Lesson$lessonProgressArgs<ExtArgs>>): Prisma.PrismaPromise<runtime.Types.Result.GetResult<Prisma.$LessonProgressPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
  /**
   * Attaches callbacks for the resolution and/or rejection of the Promise.
   * @param onfulfilled The callback to execute when the Promise is resolved.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of which ever callback is executed.
   */
  then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): runtime.Types.Utils.JsPromise<TResult1 | TResult2>
  /**
   * Attaches a callback for only the rejection of the Promise.
   * @param onrejected The callback to execute when the Promise is rejected.
   * @returns A Promise for the completion of the callback.
   */
  catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): runtime.Types.Utils.JsPromise<T | TResult>
  /**
   * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
   * resolved value cannot be modified from the callback.
   * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
   * @returns A Promise for the completion of the callback.
   */
  finally(onfinally?: (() => void) | undefined | null): runtime.Types.Utils.JsPromise<T>
}




/**
 * Fields of the Lesson model
 */
export interface LessonFieldRefs {
  readonly id: Prisma.FieldRef<"Lesson", 'String'>
  readonly title: Prisma.FieldRef<"Lesson", 'String'>
  readonly description: Prisma.FieldRef<"Lesson", 'String'>
  readonly thumbnailKey: Prisma.FieldRef<"Lesson", 'String'>
  readonly videoKey: Prisma.FieldRef<"Lesson", 'String'>
  readonly position: Prisma.FieldRef<"Lesson", 'Int'>
  readonly chapterId: Prisma.FieldRef<"Lesson", 'String'>
  readonly createdAt: Prisma.FieldRef<"Lesson", 'DateTime'>
  readonly updatedAt: Prisma.FieldRef<"Lesson", 'DateTime'>
}
    

// Custom InputTypes
/**
 * Lesson findUnique
 */
export type LessonFindUniqueArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lesson
   */
  select?: Prisma.LessonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lesson
   */
  omit?: Prisma.LessonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonInclude<ExtArgs> | null
  /**
   * Filter, which Lesson to fetch.
   */
  where: Prisma.LessonWhereUniqueInput
}

/**
 * Lesson findUniqueOrThrow
 */
export type LessonFindUniqueOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lesson
   */
  select?: Prisma.LessonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lesson
   */
  omit?: Prisma.LessonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonInclude<ExtArgs> | null
  /**
   * Filter, which Lesson to fetch.
   */
  where: Prisma.LessonWhereUniqueInput
}

/**
 * Lesson findFirst
 */
export type LessonFindFirstArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lesson
   */
  select?: Prisma.LessonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lesson
   */
  omit?: Prisma.LessonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonInclude<ExtArgs> | null
  /**
   * Filter, which Lesson to fetch.
   */
  where?: Prisma.LessonWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Lessons to fetch.
   */
  orderBy?: Prisma.LessonOrderByWithRelationInput | Prisma.LessonOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Lessons.
   */
  cursor?: Prisma.LessonWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Lessons from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Lessons.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Lessons.
   */
  distinct?: Prisma.LessonScalarFieldEnum | Prisma.LessonScalarFieldEnum[]
}

/**
 * Lesson findFirstOrThrow
 */
export type LessonFindFirstOrThrowArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lesson
   */
  select?: Prisma.LessonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lesson
   */
  omit?: Prisma.LessonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonInclude<ExtArgs> | null
  /**
   * Filter, which Lesson to fetch.
   */
  where?: Prisma.LessonWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Lessons to fetch.
   */
  orderBy?: Prisma.LessonOrderByWithRelationInput | Prisma.LessonOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for searching for Lessons.
   */
  cursor?: Prisma.LessonWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Lessons from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Lessons.
   */
  skip?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
   * 
   * Filter by unique combinations of Lessons.
   */
  distinct?: Prisma.LessonScalarFieldEnum | Prisma.LessonScalarFieldEnum[]
}

/**
 * Lesson findMany
 */
export type LessonFindManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lesson
   */
  select?: Prisma.LessonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lesson
   */
  omit?: Prisma.LessonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonInclude<ExtArgs> | null
  /**
   * Filter, which Lessons to fetch.
   */
  where?: Prisma.LessonWhereInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
   * 
   * Determine the order of Lessons to fetch.
   */
  orderBy?: Prisma.LessonOrderByWithRelationInput | Prisma.LessonOrderByWithRelationInput[]
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
   * 
   * Sets the position for listing Lessons.
   */
  cursor?: Prisma.LessonWhereUniqueInput
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Take `Â±n` Lessons from the position of the cursor.
   */
  take?: number
  /**
   * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
   * 
   * Skip the first `n` Lessons.
   */
  skip?: number
  distinct?: Prisma.LessonScalarFieldEnum | Prisma.LessonScalarFieldEnum[]
}

/**
 * Lesson create
 */
export type LessonCreateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lesson
   */
  select?: Prisma.LessonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lesson
   */
  omit?: Prisma.LessonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonInclude<ExtArgs> | null
  /**
   * The data needed to create a Lesson.
   */
  data: Prisma.XOR<Prisma.LessonCreateInput, Prisma.LessonUncheckedCreateInput>
}

/**
 * Lesson createMany
 */
export type LessonCreateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to create many Lessons.
   */
  data: Prisma.LessonCreateManyInput | Prisma.LessonCreateManyInput[]
  skipDuplicates?: boolean
}

/**
 * Lesson createManyAndReturn
 */
export type LessonCreateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lesson
   */
  select?: Prisma.LessonSelectCreateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Lesson
   */
  omit?: Prisma.LessonOmit<ExtArgs> | null
  /**
   * The data used to create many Lessons.
   */
  data: Prisma.LessonCreateManyInput | Prisma.LessonCreateManyInput[]
  skipDuplicates?: boolean
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonIncludeCreateManyAndReturn<ExtArgs> | null
}

/**
 * Lesson update
 */
export type LessonUpdateArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lesson
   */
  select?: Prisma.LessonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lesson
   */
  omit?: Prisma.LessonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonInclude<ExtArgs> | null
  /**
   * The data needed to update a Lesson.
   */
  data: Prisma.XOR<Prisma.LessonUpdateInput, Prisma.LessonUncheckedUpdateInput>
  /**
   * Choose, which Lesson to update.
   */
  where: Prisma.LessonWhereUniqueInput
}

/**
 * Lesson updateMany
 */
export type LessonUpdateManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * The data used to update Lessons.
   */
  data: Prisma.XOR<Prisma.LessonUpdateManyMutationInput, Prisma.LessonUncheckedUpdateManyInput>
  /**
   * Filter which Lessons to update
   */
  where?: Prisma.LessonWhereInput
  /**
   * Limit how many Lessons to update.
   */
  limit?: number
}

/**
 * Lesson updateManyAndReturn
 */
export type LessonUpdateManyAndReturnArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lesson
   */
  select?: Prisma.LessonSelectUpdateManyAndReturn<ExtArgs> | null
  /**
   * Omit specific fields from the Lesson
   */
  omit?: Prisma.LessonOmit<ExtArgs> | null
  /**
   * The data used to update Lessons.
   */
  data: Prisma.XOR<Prisma.LessonUpdateManyMutationInput, Prisma.LessonUncheckedUpdateManyInput>
  /**
   * Filter which Lessons to update
   */
  where?: Prisma.LessonWhereInput
  /**
   * Limit how many Lessons to update.
   */
  limit?: number
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonIncludeUpdateManyAndReturn<ExtArgs> | null
}

/**
 * Lesson upsert
 */
export type LessonUpsertArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lesson
   */
  select?: Prisma.LessonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lesson
   */
  omit?: Prisma.LessonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonInclude<ExtArgs> | null
  /**
   * The filter to search for the Lesson to update in case it exists.
   */
  where: Prisma.LessonWhereUniqueInput
  /**
   * In case the Lesson found by the `where` argument doesn't exist, create a new Lesson with this data.
   */
  create: Prisma.XOR<Prisma.LessonCreateInput, Prisma.LessonUncheckedCreateInput>
  /**
   * In case the Lesson was found with the provided `where` argument, update it with this data.
   */
  update: Prisma.XOR<Prisma.LessonUpdateInput, Prisma.LessonUncheckedUpdateInput>
}

/**
 * Lesson delete
 */
export type LessonDeleteArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lesson
   */
  select?: Prisma.LessonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lesson
   */
  omit?: Prisma.LessonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonInclude<ExtArgs> | null
  /**
   * Filter which Lesson to delete.
   */
  where: Prisma.LessonWhereUniqueInput
}

/**
 * Lesson deleteMany
 */
export type LessonDeleteManyArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Filter which Lessons to delete
   */
  where?: Prisma.LessonWhereInput
  /**
   * Limit how many Lessons to delete.
   */
  limit?: number
}

/**
 * Lesson.lessonProgress
 */
export type Lesson$lessonProgressArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the LessonProgress
   */
  select?: Prisma.LessonProgressSelect<ExtArgs> | null
  /**
   * Omit specific fields from the LessonProgress
   */
  omit?: Prisma.LessonProgressOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonProgressInclude<ExtArgs> | null
  where?: Prisma.LessonProgressWhereInput
  orderBy?: Prisma.LessonProgressOrderByWithRelationInput | Prisma.LessonProgressOrderByWithRelationInput[]
  cursor?: Prisma.LessonProgressWhereUniqueInput
  take?: number
  skip?: number
  distinct?: Prisma.LessonProgressScalarFieldEnum | Prisma.LessonProgressScalarFieldEnum[]
}

/**
 * Lesson without action
 */
export type LessonDefaultArgs<ExtArgs extends runtime.Types.Extensions.InternalArgs = runtime.Types.Extensions.DefaultArgs> = {
  /**
   * Select specific fields to fetch from the Lesson
   */
  select?: Prisma.LessonSelect<ExtArgs> | null
  /**
   * Omit specific fields from the Lesson
   */
  omit?: Prisma.LessonOmit<ExtArgs> | null
  /**
   * Choose, which related nodes to fetch as well
   */
  include?: Prisma.LessonInclude<ExtArgs> | null
}
